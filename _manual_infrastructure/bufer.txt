
    private PolygonExtended polygon2d2Radius1 = createPolygon2d2Radius1();

    private PolygonExtended createPolygon2d2Radius1() {
        PolygonExtended polygon = polygonNearOriginRadius01.clone();
        Point vector = new PointClass(1, 1);
        polygon.deposeOn(vector);

        return polygon;
    }

    @Test
    void isPolygonEntering_corridorSize2Time0_endCorridorEntry() {
        assertFalse(corridorSizeFrom0To2.isPolygonEntering(0.0, polygon2d2Radius1));
    }

    @Test
    void isPolygonEntering_corridorSize2Time1_endCorridorEntry() {
        assertTrue(corridorSizeFrom0To2.isPolygonEntering(1.0, polygon2d2Radius1));
    }

    @Test
    void isPolygonEntering_corridorSize2Time2_endCorridorEntry() {
        assertFalse(corridorSizeFrom0To2.isPolygonEntering(2.0, polygon2d2Radius1));
    }